{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NLP for Drone Flight Log Analysis","text":""},{"location":"#unlocking-actionable-insights-from-flight-telemetry","title":"Unlocking Actionable Insights from Flight Telemetry","text":"<p>Welcome to the central hub for the \"NLP for Drone Flight Log Analysis\" research project. This initiative leverages the power of Natural Language Processing to transform complex drone flight log messages into structured, actionable intelligence. Our goal is to enhance safety protocols, streamline maintenance, and bolster forensic analysis capabilities for the rapidly expanding world of Unmanned Aerial Vehicles.</p>"},{"location":"#our-core-contributions-what-youll-find-here","title":"Our Core Contributions &amp; What You'll Find Here:","text":"<ul> <li> <p> A Novel Annotated Dataset</p> <p>Access our meticulously curated and publicly available dataset of drone flight log messages. Designed for NLP model development and evaluation, it includes diverse messages from real-world operations, meticulously cleansed and annotated.</p> <p> Explore the Dataset Challenges</p> </li> <li> <p> Transparent Methodology</p> <p>Dive deep into our rigorous research process, from data collection and comprehensive cleansing procedures to our annotation guidelines, all justified by established aviation standards and regulations.</p> <p> View Methodology</p> </li> <li> <p> \"Forensic Challenges\"</p> <p>Evaluate your NLP models against our specialized test sets presented as real-world flight incident \"forensic challenges,\" each with detailed ground truth for various analytical tasks.</p> <p> Discover Challenges</p> </li> <li> <p> Seamless Data Access</p> <p>All our datasets are hosted on Zenodo, offering easy and programmatic access via CLI tools for researchers and developers worldwide.</p> <p> Download Data</p> </li> </ul>"},{"location":"#latest-updates","title":"Latest Updates:","text":"<ul> <li>[2025-07-22] Initial public release of the \"NLP for Drone Flight Log Analysis\" project website.</li> <li>[2023-04-19] Our paper, \"DroNER: Dataset for drone named entity recognition,\" accepted at Data in Brief.</li> </ul>"},{"location":"#ready-to-dive-deeper","title":"Ready to Dive Deeper?","text":"<p>Whether you're an NLP researcher, a drone engineer, or an aviation safety analyst, this site provides the resources you need to advance the field of drone flight log analysis.</p> <p> Learn More About the Project</p>"},{"location":"about/","title":"About the Project","text":""},{"location":"about/#motivation-background","title":"Motivation &amp; Background","text":"<p>The widespread adoption of Unmanned Aerial Vehicles (UAVs), or drones, across various sectors\u2014from logistics and agriculture to infrastructure inspection and public safety\u2014has underscored the critical need for robust operational monitoring and incident analysis. Drone flight logs, which record vast amounts of telemetry data and system messages, are indispensable for understanding flight behavior, diagnosing anomalies, and investigating incidents.</p> <p>However, extracting actionable insights from these logs presents significant challenges: they are often voluminous, contain unstructured or semi-structured text, feature technical jargon, and may suffer from inconsistencies or noise. Manually sifting through these messages is a time-consuming, error-prone, and highly specialized task.</p> <p>Our research addresses this bottleneck by applying Natural Language Processing (NLP) techniques to automate and enhance the analysis of drone flight logs. We aim to bridge the gap between raw flight data and actionable intelligence, making drone operations safer and post-flight analysis more efficient.</p>"},{"location":"about/#research-goals","title":"Research Goals","text":"<p>The primary objectives of the \"NLP for Drone Flight Log Analysis\" project are:</p> <ol> <li>Develop a Comprehensive Methodology: To establish and document a rigorous methodology for the collection, cleansing, and annotation of drone flight log messages, ensuring transparency and reproducibility.</li> <li>Create a Publicly Available Annotated Dataset: To construct and release a high-quality, domain-specific annotated dataset of drone flight log messages, serving as a vital resource and benchmark for the NLP and aviation communities.</li> <li>Propose &amp; Evaluate NLP Frameworks: To design and assess NLP-driven frameworks for critical analytical tasks, including:<ul> <li>Event Recognition: Identifying key flight events (e.g., takeoff, landing, RTH initiation).</li> <li>Problem Identification: Pinpointing specific issues or anomalies (e.g., sensor errors, battery warnings).</li> <li>Log Abstraction: Summarizing complex flight sequences or incidents.</li> <li>NER-based Term Extraction: Identifying entities like Components, Functions, Parameters, Issues, Actions, and States.</li> <li>NER-based Semantic Role Labeling: Extracting relationships between Events, their Implications/Effects, and Mitigation/Instructions.</li> </ul> </li> </ol>"},{"location":"about/#our-contribution","title":"Our Contribution","text":"<p>This project's core contribution is its open-source dataset and detailed documentation, providing a much-needed resource for advancing NLP research in aviation safety and drone forensics. By making our data and methodology publicly accessible, we hope to foster further innovation, enable comparative studies, and ultimately contribute to safer and more reliable drone operations worldwide.</p>"},{"location":"about/#target-audience","title":"Target Audience","text":"<p>This project is designed to be a valuable resource for:</p> <ul> <li>Natural Language Processing Researchers: Seeking specialized datasets and real-world challenges in a novel domain.</li> <li>Drone Engineers &amp; Developers: Improving onboard logging, diagnostics, and autonomous decision-making.</li> <li>Aviation Safety Analysts: Enhancing incident investigation, trend analysis, and predictive maintenance.</li> <li>Digital Forensic Investigators: Utilizing drone flight data as crucial evidence.</li> </ul> <p>Contributing to the Project</p> <p>If you are interested in contributing to this open-source research project, please refer to our Contact page for collaboration opportunities.</p>"},{"location":"blog/","title":"Project Blog","text":"<p>Welcome to the \"NLP for Drone Flight Log Analysis\" project blog! Here, we share updates, detailed how-to guides, insights, and behind-the-scenes looks at our research.</p>"},{"location":"blog/#latest-posts","title":"Latest Posts:","text":""},{"location":"blog/#1-extracting-flight-logs-from-vto-labs-forensic-images","title":"1. Extracting Flight Logs from VTO Labs Forensic Images","text":"<p>Date: July 23, 2025 Author: S. Silalahi</p> <p>This post provides a comprehensive, step-by-step guide on how we extracted human-readable flight log files from the encrypted forensic images of drone controller devices provided by VTO Labs. Learn about the tools and procedures involved in converting raw data into analyzable messages.</p> <p> Read More</p>"},{"location":"blog/vto-labs-extraction/","title":"Extracting Flight Logs from VTO Labs Forensic Images","text":"<p>Date: July 23, 2025 Author: S. Silalahi</p> <p>This blog post provides a detailed, step-by-step walkthrough of the process we employed to extract and decrypt human-readable flight log messages from the forensic images of drone controller devices, as sourced from the VTO Labs Drone Forensics Program. This process was a crucial part of building our comprehensive \"NLP for Drone Flight Log Analysis\" dataset.</p>"},{"location":"blog/vto-labs-extraction/#1-understanding-the-source-data","title":"1. Understanding the Source Data","text":"<p>The VTO Labs dataset (accessible via https://drive.google.com/drive/folders/1-UrxFGpCo54bVujwFmmqNbsZEV28dSNz) consists of forensic images from various drone models and components. Our initial analysis revealed that relevant, human-readable flight log messages were predominantly found within data acquired from controller devices. Other components often contained encrypted, proprietary, or purely telemetry data not suitable for direct NLP analysis.</p>"},{"location":"blog/vto-labs-extraction/#2-locating-and-extracting-flight-log-files-from-controller-artifacts","title":"2. Locating and Extracting Flight Log Files from Controller Artifacts","text":"<p>The VTO Labs collection of drone images includes data acquired from various controller devices, specifically Android phones, Android tablets, and iOS phones. The extraction methodology varies slightly depending on the operating system and artifact file type. Our goal was to identify and extract files containing human-readable log messages.</p>"},{"location":"blog/vto-labs-extraction/#21-android-based-controllers-phones-tablets","title":"2.1. Android-Based Controllers (Phones &amp; Tablets)","text":"<p>For Android-based controller artifacts, VTO Labs provides two main types of files: <code>.zip</code> archives and <code>.001</code> forensic images.</p>"},{"location":"blog/vto-labs-extraction/#211-for-zip-archives","title":"2.1.1. For <code>.zip</code> Archives:","text":"<p>These archives can often be directly unzipped using standard archival tools. Once unzipped, the flight logs are typically found in the following directories:</p> <ul> <li>Encrypted <code>.txt</code> Flight Log Files (<code>DJIFlightRecord_YYYY-MM-DD_[HH-MM-SS].txt</code>):<ul> <li><code>/dji/dji.go.v4/FlightRecord/</code></li> <li><code>/dji/dji.pilot/FlightRecord/</code></li> </ul> </li> <li>Unencrypted Human-Readable Error Logs:<ul> <li><code>/dji/dji.go.v4/LOG/ERROR_POP_LOG/</code></li> <li><code>/dji/dji.pilot/LOG/ERROR_POP_LOG/</code> These folders contain simpler, often plain-text, human-readable error messages that did not require decryption.</li> </ul> </li> </ul>"},{"location":"blog/vto-labs-extraction/#212-for-001-forensic-images","title":"2.1.2. For <code>.001</code> Forensic Images:","text":"<p>For artifacts provided as <code>.001</code> forensic images (which require specialized forensic tools to mount and access), we used Autopsy, an open-source digital forensics platform, to navigate and extract relevant files.</p> <ul> <li>Tool Used: Autopsy (open-source digital forensics platform)</li> <li>Extraction Path: Within Autopsy, we gained access to the file system and extracted the encrypted <code>.txt</code> flight log files from paths similar to:<ul> <li><code>/dji/dji.go.v4/FlightRecord/</code></li> <li><code>/dji/dji.pilot/FlightRecord/</code></li> </ul> </li> </ul>"},{"location":"blog/vto-labs-extraction/#22-ios-based-controllers-iphones","title":"2.2. iOS-Based Controllers (iPhones)","text":"<p>For iOS-based controller artifacts, all data was provided in <code>.zip</code> archives.</p> <ul> <li>Extraction Method:<ul> <li>Most <code>.zip</code> files from iOS controllers could be directly unzipped to reveal their contents.</li> <li>For any <code>.zip</code> files that resisted direct unzipping or appeared corrupted, we reverted to using Autopsy to access their internal structure and extract the files containing human-readable log messages.</li> </ul> </li> </ul>"},{"location":"blog/vto-labs-extraction/#23-post-extraction-processing-for-all-controller-logs","title":"2.3. Post-Extraction Processing for All Controller Logs","text":"<p>After collecting both the encrypted <code>.txt</code> flight log files and the unencrypted <code>ERROR_POP_LOG</code> files (where applicable) from both Android and iOS sources:</p> <ul> <li>The encrypted <code>.txt</code> log files (e.g., <code>DJIFlightRecord_YYYY-MM-DD_[HH-MM-SS].txt</code>) were then decrypted using the DJI Phantom Help Log Viewer, as detailed in the next section.</li> <li>The unencrypted <code>ERROR_POP_LOG</code> files were immediately ready for inclusion in our raw message collection without further decryption.</li> </ul>"},{"location":"blog/vto-labs-extraction/#3-decrypting-the-logs-with-dji-phantom-help","title":"3. Decrypting the Logs with DJI Phantom Help","text":"<p>DJI flight logs are encrypted, necessitating a decryption step. We utilized the online DJI Phantom Help Log Viewer for this purpose.</p> <ul> <li> <p>Tool Used: https://www.phantomhelp.com/logviewer/upload/</p> </li> <li> <p>Step-by-Step Decryption:</p> <ol> <li>Access the Tool: Navigate to the DJI Phantom Help Log Viewer website.</li> <li>Upload File: Click the \"Upload\" button and select an encrypted <code>DJIFlightRecord_*.txt</code> file from your local <code>controller_device</code> directory.</li> <li>Process: The tool automatically processes and decrypts the file.</li> <li>Download CSV: Once decrypted, download the resulting human-readable data as a <code>.csv</code> file.</li> <li>Repeat: This manual process was performed for each individual encrypted flight log file.</li> </ol> <p>Manual Process Note</p> <p>It's important to note that this was a file-by-file manual decryption process due to the nature of the online tool. For very large collections, this step can be quite time-consuming.</p> </li> </ul>"},{"location":"blog/vto-labs-extraction/#4-extracting-relevant-messages-for-nlp","title":"4. Extracting Relevant Messages for NLP","text":"<p>The downloaded CSV files contain numerous columns, encompassing various types of flight data. For our NLP analysis, we focused on columns specifically containing human-readable messages.</p> <ul> <li> <p>Key Columns Extracted:</p> <ul> <li><code>APP.message</code>: Contains general operational messages.</li> <li><code>APP.tip</code>: Provides advisory or tip messages.</li> <li><code>APP.warning</code>: Contains warning or error messages.</li> </ul> </li> <li> <p>Constructing the Forensic Timeline:     For each extracted log, we then paired these messages with their precise timestamps. This allowed us to reconstruct a chronological \"forensic timeline\" of events and communications from the drone system during the flight. This timeline became the raw input for our data cleansing procedures.</p> <ul> <li>Timeline Elements: <code>Timestamp (Date and Time)</code> + <code>Message Content</code></li> </ul> </li> </ul>"},{"location":"blog/vto-labs-extraction/#conclusion","title":"Conclusion","text":"<p>This meticulous extraction and decryption process was fundamental in transforming raw, often inaccessible, drone flight data into a rich source of textual information for our NLP research. It highlights the practical challenges involved in acquiring and preparing data from real-world forensic artifacts.</p>"},{"location":"methodology/","title":"Our Methodology: A Transparent Approach","text":"<p>The success and reliability of any data-driven research, especially in critical domains like aviation safety, hinge upon a meticulously documented and rigorously applied methodology. This section provides a comprehensive overview of the processes involved in creating the \"NLP for Drone Flight Log Analysis\" dataset and the associated analytical frameworks.</p> <p>Our commitment to open science and reproducibility means that every step, from initial data collection and cleansing to detailed annotation procedures, is thoroughly explained and justified by relevant industry standards and academic best practices.</p>"},{"location":"methodology/#key-phases-of-our-methodology","title":"Key Phases of Our Methodology:","text":"<p>Our approach is structured around the following interconnected phases:</p> <ul> <li> <p> Data Collection</p> <p>Details on how raw drone flight log messages were acquired from diverse sources, including AirData UAV and forensic artifacts from VTO Labs.</p> <p> Learn More</p> </li> <li> <p> Data Cleansing</p> <p>An in-depth explanation of the procedures used to transform noisy, inconsistent raw messages into a clean, standardized, and machine-readable format.</p> <p> Learn More</p> </li> <li> <p> Annotation Procedures</p> <p>Detailed guidelines for how flight log messages were annotated for various NLP tasks, ensuring consistency and high inter-annotator agreement.</p> <p> Learn More</p> </li> <li> <p> Justification &amp; Standards</p> <p>How our annotation guidelines and cleansing decisions are grounded in existing aviation regulations and standard documents (e.g., FAA, NTSB, INTERPOL).</p> <p> Learn More</p> </li> </ul>"},{"location":"methodology/#our-commitment-to-reproducibility","title":"Our Commitment to Reproducibility","text":"<p>By detailing our methodology here, we aim to provide researchers, practitioners, and enthusiasts with the necessary context and understanding to replicate our work, build upon our findings, and contribute to the advancement of NLP in drone aviation. We encourage thorough review and welcome feedback on our methods.</p> <p>Dive Deeper</p> <p>Explore the sub-sections in the sidebar for granular details on each phase of our methodology.</p>"},{"location":"methodology/cleansing/","title":"Data Cleansing Procedure","text":"<p>The raw flight log messages obtained from sources like AirData UAV, while rich in information, often contain various forms of noise that can significantly hinder subsequent Natural Language Processing (NLP) tasks. These noisy logs can manifest as inconsistent formatting, missing punctuation, over-generalized statements, or irrelevant system messages, making automated extraction and understanding challenging.</p> <p>Our data cleansing procedure is a critical initial step designed to transform these raw, noisy messages into a structured, consistent, and semantically clearer format, suitable for robust NLP analysis. This process ensures the quality and reliability of our annotated dataset.</p>"},{"location":"methodology/cleansing/#1-accessing-raw-logs","title":"1. Accessing Raw Logs","text":"<p>The raw, un-cleansed flight logs from which our dataset is derived are available as part of the complete dataset download on Zenodo. This allows for full transparency and reproducibility of our cleansing process.</p> <ul> <li>Access Raw Logs on Zenodo: [Link to your Zenodo dataset DOI]<ul> <li>Note: These raw logs, while representing the original source, might have undergone minimal initial parsing by the AirData platform itself. Our cleansing focuses on refining the textual content.</li> </ul> </li> </ul>"},{"location":"methodology/cleansing/#2-motivating-examples-for-cleansing","title":"2. Motivating Examples for Cleansing","text":"<p>To illustrate the necessity of data cleansing, consider the following examples of raw messages and their challenges for NLP:</p>"},{"location":"methodology/cleansing/#example-1-missing-punctuation-concatenation","title":"Example 1: Missing Punctuation &amp; Concatenation","text":"<ul> <li> <p>Original Message <pre><code>165 - Ambient Light too Weak, Vision Positioningobstacle sensing is unavailable. please ensure safety during the flight\n</code></pre></p> <ul> <li>Challenge for NLP: The concatenation of \"Positioning\" and \"obstacle\" (e.g., \"Positioningobstacle\") makes tokenization difficult and impedes entity recognition or parsing of sensor-related information. The missing period after \"unavailable\" and capitalization issues further complicate sentence boundary detection and readability.</li> </ul> </li> <li> <p>Cleansed Message <pre><code>165 - Ambient Light too Weak. Vision Positioning/Obstacle Sensing is unavailable. Please ensure safety during the flight.\n</code></pre></p> <ul> <li>Impact: This corrected version allows for accurate tokenization, clearer identification of the system affected (\"Vision Positioning/Obstacle Sensing\"), and proper sentence segmentation, which is crucial for many NLP tasks.</li> </ul> </li> </ul>"},{"location":"methodology/cleansing/#example-2-ambiguous-or-over-generalized-statements","title":"Example 2: Ambiguous or Over-generalized Statements","text":"<ul> <li> <p>Original Message <pre><code>34 - Detected side/backward/forward shock / possible collision, aircraft is pitching/rolling sharply forward/backwards/left/right\n</code></pre></p> <ul> <li>Challenge for NLP: This message is highly generalized. \"Possible collision\" is vague, and \"pitching/rolling sharply\" combines multiple distinct flight maneuvers or anomalous behaviors. Without disambiguation, it's difficult for an NLP model to infer the precise event or its cause, limiting its utility for incident analysis or specific problem identification.</li> </ul> </li> <li> <p>Analysis Goal (for cleansed data)</p> <ul> <li>For such messages, our cleansing aims to either refine them based on available context (if a definitive, specific interpretation is possible) or to flag them as multi-faceted warnings that require deeper human review and contextual analysis, which our subsequent annotation tasks address. This ensures that the dataset either provides precise ground truth or highlights areas of inherent ambiguity.</li> </ul> </li> </ul>"},{"location":"methodology/cleansing/#3-correction-types-and-procedures","title":"3. Correction Types and Procedures","text":"<p>Our cleansing process primarily addresses two major categories of noise:</p>"},{"location":"methodology/cleansing/#31-type-1-missing-punctuation-and-space-correction","title":"3.1. Type 1: Missing Punctuation and Space Correction","text":"<p>These corrections focus on improving the syntactic structure and readability of messages by addressing errors commonly arising from inconsistent logging practices or data ingestion.</p> <ul> <li>Motivation: Incorrect punctuation and missing spaces create malformed tokens, break sentence boundaries, and impede standard NLP preprocessing steps (e.g., tokenization, part-of-speech tagging, dependency parsing). Correcting these issues ensures messages are parseable and conform to expected linguistic patterns.</li> <li> <p>Procedure:</p> <ol> <li>Automated Rules: Regular expressions and rule-based heuristics were applied to identify common patterns of missing spaces (e.g., lowercase followed by uppercase, number followed by alphabet) or missing punctuation (e.g., sentence ending without a period).</li> <li>Contextual Insertion: Punctuation (e.g., periods, commas, slashes) was inserted based on common linguistic rules and observed patterns in well-formed messages, particularly at logical phrase or clause boundaries.</li> <li>Manual Review &amp; Refinement: A significant portion of these corrections involved manual review by human annotators to ensure semantic correctness and avoid introducing new errors. This iterative process involved developing new rules based on observed edge cases.</li> </ol> </li> <li> <p>Examples of Type 1 Corrections:</p> Message ID Original Message (Excerpt) Corrected Message (Excerpt) Justification 165 <code>Ambient Light too Weak, Vision Positioningobstacle sensing is unavailable.</code> <code>Ambient Light too Weak. Vision Positioning/Obstacle Sensing is unavailable.</code> Inserted period after \"Weak\" to separate independent clauses. Added \"/\" to clarify \"Vision Positioning/Obstacle Sensing\". Fixed \"Positioningobstacle\" concatenation. 204 <code>Ambient Light too Weak, Forward/Backwardobstacle sensing is unavailable.</code> <code>Ambient Light too Weak. Forward/Backward Obstacle Sensing is unavailable.</code> Similar to 165, separated clauses with a period. Added space between \"Backward\" and \"Obstacle\". 78 <code>Battery voltage lowplease land</code> <code>Battery voltage low. Please land.</code> Separated two distinct imperative clauses with a period. Capitalized \"Please\" for sentence start. 112 <code>GPS signal weakcannot find home point.</code> <code>GPS signal weak. Cannot find home point.</code> Separated two distinct clauses with a period. Capitalized \"Cannot\". 312 <code>Aircraft disconnectedfrom remote controller.</code> <code>Aircraft disconnected from remote controller.</code> Inserted missing space between \"disconnected\" and \"from\". 405 <code>Propeller errorcheck propellers</code> <code>Propeller error. Check propellers.</code> Separated statement from instruction with a period. Capitalized \"Check\". ... [More examples will be added here or linked to] [More examples] [More justifications] </li> </ul>"},{"location":"methodology/cleansing/#32-type-2-over-generalized-message-analysis-refinement","title":"3.2. Type 2: Over-generalized Message Analysis &amp; Refinement","text":"<p>This category deals with messages that, while syntactically correct, are semantically vague, combine multiple potential issues, or lack the specificity required for granular NLP analysis (e.g., pinpointing a single root cause).</p> <ul> <li>Motivation: Over-generalized messages reduce the actionable insights derivable from flight logs. For tasks like problem identification or event recognition, it's crucial to either refine these messages into more specific statements or to acknowledge their inherent ambiguity and document potential interpretations. This process aims to enhance the utility of the dataset for models seeking precise classifications.</li> <li> <p>Procedure:</p> <ol> <li>Expert Review &amp; Contextual Analysis: Messages identified as over-generalized underwent rigorous review by domain experts. This involved consulting official drone documentation, flight manuals, and aviation safety reports (FAA, NTSB, INTERPOL) to understand the full spectrum of conditions that might trigger such messages.</li> <li>Disambiguation Strategies:<ul> <li>Contextual Refinement: When surrounding log messages, telemetry data (not part of this NLP dataset), or known flight conditions provided sufficient evidence, the message was rephrased to reflect a more specific event or issue.</li> <li>Documentation of Possibilities: For cases where a definitive single interpretation was not possible without external data, the message was documented with a detailed explanation of its potential meanings or the various scenarios it might cover. This helps annotators and future model developers understand the inherent ambiguity.</li> <li>Decomposition (Future Work): In some complex cases, an over-generalized message might be decomposed into multiple, distinct events or issues. This is a more advanced form of refinement and is considered for future iterations of the dataset.</li> </ul> </li> </ol> </li> <li> <p>Case Studies: Discussion of Over-Generalized Messages</p> <p>Here, we delve into specific examples of over-generalized messages, discussing their challenges and our approach to handling them in the dataset.</p> </li> </ul>"},{"location":"methodology/cleansing/#case-1-message-id-34","title":"Case 1: Message ID 34","text":"<ul> <li> <p>Original Message: <code>Detected side/backward/forward shock / possible collision, aircraft is pitching/rolling sharply forward/backwards/left/right</code></p> </li> <li> <p>Analysis &amp; Approach:     This message is a prime example of an alert designed to cover a broad range of potential impact or stability issues. The use of multiple slash-separated terms (<code>side/backward/forward shock</code>, <code>pitching/rolling sharply forward/backwards/left/right</code>) indicates a generic warning that could be triggered by various events, from a minor bump to a significant collision, or even extreme turbulence.</p> <ul> <li>Possibilities of Actual Events:<ul> <li>Minor Collision/Contact: The drone might have briefly contacted a tree branch, power line, or other obstacle without severe damage.</li> <li>Hard Landing/Rough Touchdown: A less-than-smooth landing could trigger \"shock\" or \"pitching/rolling sharply.\"</li> <li>Extreme Turbulence/Wind Shear: Strong, sudden gusts of wind could cause the aircraft to \"pitch/roll sharply\" or experience a \"shock\" without any physical contact.</li> <li>Gimbal/Camera Impact: If the camera or gimbal hit something, it might be interpreted as a \"shock\" to the aircraft.</li> <li>Internal Component Shift/Malfunction: Less likely, but a sudden shift of an internal battery or a mechanical failure could produce similar readings.</li> </ul> </li> <li>Dataset Handling: For annotation purposes, such messages are typically tagged as a <code>Warning</code> type with <code>Collision/Impact Risk</code> as a broad problem category. However, in cases where context from surrounding messages or flight telemetry definitively indicated a specific type of collision (e.g., immediate follow-up messages about sensor damage), a more specific annotation might be applied. Where specific disambiguation is not possible, the annotation reflects the generalized nature of the warning.</li> </ul> </li> </ul>"},{"location":"methodology/cleansing/#case-2-message-id-204","title":"Case 2: Message ID 204","text":"<ul> <li> <p>Original Message (after Type 1 cleansing): <code>Ambient Light too Weak. Forward/Backward Obstacle Sensing is unavailable. Please ensure safety during the flight.</code></p> </li> <li> <p>Analysis &amp; Approach:     While the punctuation is corrected, the core issue of \"Forward/Backward Obstacle Sensing is unavailable\" remains somewhat generalized. It implies a functional failure, but the underlying reason for unavailability might vary beyond just \"Ambient Light too Weak.\"</p> <ul> <li>Possibilities of Actual Causes for Sensing Unavailability (beyond just light):<ul> <li>Sensor Obstruction: The obstacle sensing cameras/sensors could be physically blocked (e.g., by dirt, moisture, sticker).</li> <li>Software Glitch/Bug: A temporary software issue might render the sensors inoperative.</li> <li>Hardware Malfunction: A sensor component itself could have failed.</li> <li>Environmental Factors: While \"Ambient Light too Weak\" is given, other environmental factors like heavy fog, smoke, or excessive glare could also contribute.</li> <li>Flight Mode Limitation: Certain flight modes (e.g., Sport mode on some DJI drones) intentionally disable obstacle sensing.</li> </ul> </li> <li>Dataset Handling: In our annotated dataset, the primary problem identified is <code>Sensor Unavailability</code> or <code>Environmental Limitation</code> (due to ambient light). While the message itself is generalized, the immediate preceding or following messages often provide more context (e.g., specific sensor error codes) that allow for a more precise <code>Problem Identification</code> annotation. If no further context is available, the annotation reflects the directly stated warning.</li> </ul> </li> </ul>"},{"location":"methodology/cleansing/#33-other-cleansing-considerations-briefly-mention","title":"3.3. Other Cleansing Considerations (Briefly Mention)","text":"<ul> <li>Removal of Redundant/Repetitive Messages: Consecutive identical messages often provide no new information and are consolidated or removed to streamline the dataset.</li> <li>Anonymization: Any potentially personally identifiable information or highly sensitive flight details are carefully anonymized or removed to ensure privacy.</li> <li>Normalization: Consistent formatting of numerical values (e.g., temperatures, voltages) and units of measurement.</li> </ul>"},{"location":"methodology/cleansing/#4-documentation-of-all-corrected-messages","title":"4. Documentation of All Corrected Messages","text":"<p>A comprehensive log of all messages that underwent cleansing, showing their original and corrected forms, along with the specific type of correction applied and a brief justification, is provided for full transparency.</p> <ul> <li> <p>Download the Full Cleansing Log:     This detailed log is available as a CSV or JSON file on our Zenodo dataset. It serves as an exhaustive record of all modifications.</p> <p><pre><code># Example CLI command to download the cleansing log (replace DOI)\nzenodo_get --file \"cleansing_log_v1.0.csv\" [YOUR_ZENODO_DOI_NUMBER_HERE]\n</code></pre> * File Format: The log is typically in <code>CSV</code> or <code>JSONL</code> format, with columns such as <code>MessageID</code>, <code>OriginalMessage</code>, <code>CorrectedMessage</code>, <code>CorrectionType</code>, <code>Justification</code>, etc.</p> </li> <li> <p>Sample from the Cleansing Log:     Here's a small illustrative sample of what you'll find in the full cleansing log:</p> Message ID Original Message Corrected Message Correction Type Justification 165 <code>Ambient Light too Weak, Vision Positioningobstacle sensing is unavailable. please ensure safety during the flight</code> <code>Ambient Light too Weak. Vision Positioning/Obstacle Sensing is unavailable. Please ensure safety during the flight.</code> Type 1 Punctuation, capitalization, space, slash added. 204 <code>Ambient Light too Weak, Forward/Backwardobstacle sensing is unavailable. please ensure safety during the flight</code> <code>Ambient Light too Weak. Forward/Backward Obstacle Sensing is unavailable. Please ensure safety during the flight.</code> Type 1 Punctuation, capitalization, space added. 34 <code>Detected side/backward/forward shock / possible collision, aircraft is pitching/rolling sharply forward/backwards/left/right</code> (No direct \"corrected\" form for this type of over-generalized message; analysis provided in section 3.2) Type 2 (Analysis) Documented ambiguity and potential interpretations. 78 <code>Battery voltage lowplease land</code> <code>Battery voltage low. Please land.</code> Type 1 Punctuation, capitalization. 121 <code>NoGPS signalweak.</code> <code>No GPS signal. Weak.</code> Type 1 Space, punctuation, capitalization. ... ... ... ... ... </li> </ul> <p>This structure for your <code>cleansing.md</code> file will make your data cleansing process incredibly transparent and easy for other researchers to understand and replicate. Remember to replace all placeholder text (<code>[YOUR_ZENODO_DOI_HERE]</code>, etc.) with your actual project details once they are available.</p>"},{"location":"methodology/data-collection/","title":"Data Collection &amp; Initial Scope","text":"<p>This section details the comprehensive process undertaken to collect the raw drone flight log messages that form the foundation of our NLP analysis. Our data sources include publicly available information from AirData UAV and forensic artifacts from VTO Labs.</p>"},{"location":"methodology/data-collection/#1-airdata-uav-message-collection","title":"1. AirData UAV Message Collection","text":"<p>The primary source for a broad range of drone notification messages was the AirData UAV platform.</p> <ul> <li> <p>Source URL: https://app.airdata.com/wiki/Notifications</p> </li> <li> <p>Collection Procedure:     The collection process involved navigating to the provided AirData UAV Wiki URL and manually copying all messages presented in English. These messages represent a diverse set of notifications, warnings, and status updates generated by various drone models and flight scenarios.</p> </li> <li> <p>Observed Discrepancy:     The AirData website indicated a total of 508 messages available on the page. However, upon copying and transferring these messages into an Excel file for initial organization, we consistently found only 499 unique messages. The exact reason for this discrepancy (e.g., dynamic loading, filtering, or hidden characters not captured during copying) remains unconfirmed. Despite this minor difference, the collected 499 messages provide a substantial and representative sample of AirData notifications.</p> </li> </ul>"},{"location":"methodology/data-collection/#2-vto-labs-flight-log-extraction","title":"2. VTO Labs Flight Log Extraction","text":"<p>In addition to AirData, a significant portion of our raw data was derived from forensic images of drone artifacts provided by VTO Labs. This source offers real-world flight log data, often containing more granular and context-specific messages.</p> <ul> <li> <p>VTO Labs Project Report:     A comprehensive overview of the VTO Labs Drone Forensics Program, including details on data acquisition and analysis, can be accessed via their official report:     https://dfrws.org/wp-content/uploads/2019/06/pres_drone_forensics_program.pdf</p> </li> <li> <p>Raw Image Collection (Google Drive):     The raw forensic images from various drone models are publicly available on Google Drive:     https://drive.google.com/drive/folders/1-UrxFGpCo54bVujwFmmqNbsZEV28dSNz</p> </li> <li> <p>Message Source Identification:     Upon initial examination of the VTO Labs data, it was observed that human-readable flight log messages were consistently found only within log files acquired from controller devices. Logs from other drone components (e.g., the aircraft itself) were often in proprietary binary formats or contained only telemetry data without explicit textual messages relevant to our NLP tasks.</p> <p>Detailed Extraction Guide</p> <p>For a comprehensive, step-by-step guide on how we extracted and decrypted these flight log files from the VTO Labs forensic images, please refer to our dedicated blog post:  Extracting Flight Logs from VTO Labs Forensic Images</p> </li> <li> <p>Extraction and Decryption Process:     The extraction process for VTO Labs data involved the following steps:</p> <ol> <li>Controller Log Identification: For each drone model and dataset ID, all flight log files originating from the <code>controller_device</code> artifact were identified. </li> <li>Decryption: The raw <code>.txt</code> flight log files from DJI drones are typically encrypted. To obtain human-readable messages, each file was individually decrypted using the DJI Phantom Help Log Viewer online tool.<ul> <li>Tool Used: https://www.phantomhelp.com/logviewer/upload/</li> <li>Procedure: Each encrypted <code>.txt</code> log file was uploaded to the Phantom Help Log Viewer, decrypted, and then the resulting human-readable data was downloaded as a <code>.csv</code> file. This was a manual, file-by-file process.</li> </ul> </li> <li>Message and Timestamp Extraction: From the decrypted <code>.csv</code> flight logs, specific columns containing textual messages and their corresponding timestamps were extracted.<ul> <li>Extracted Columns: <code>APP.message</code>, <code>APP.tip</code>, and <code>APP.warning</code>.</li> <li>Forensic Timeline Construction: For each log, a simplified forensic timeline was constructed by pairing the extracted messages with their precise timestamps (date and time). This timeline forms the basis for subsequent cleansing and annotation.</li> </ul> </li> </ol> </li> </ul> <p>Data Sensitivity</p> <p>While the VTO Labs raw images are publicly available, the decryption and extraction process yields more detailed information. Our focus is on the messages themselves, and any sensitive contextual data not directly part of the message content is omitted from the final dataset.</p>"},{"location":"methodology/data-collection/#3-combined-raw-message-collection","title":"3. Combined Raw Message Collection","text":"<p>The messages collected from both AirData UAV and the VTO Labs decrypted flight logs constitute the initial raw message collection for our NLP analysis. This diverse collection provides a robust foundation for identifying common patterns of noise and developing effective cleansing and annotation strategies.</p>"}]}